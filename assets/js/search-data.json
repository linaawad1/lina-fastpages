{
  
    
        "post0": {
            "title": "Finalquizblog",
            "content": "Question Review . Final Score = 46/50 . Question 28 . . My Answer: A | Why did I choose this? | I chose A because I thought that since it had separate conditions for under 25 and over 25, they are simply multiplied by either 5 or 7. | Why was it wrong? | The answer I chose would overprice the customer. This basically means that even though the price is different for every unit above 25, the original 25 units should not be charged 7, they should be charged 5. . | Right Answer: C | Why? | If the number of units of electricity used is 25 or less, the cost is 5 times the number of units. When the customer buys 35 units they wouldn’t pay 7 for all 35. They would by 35-25=10 units that were 7 and the 25 that are 5. | . Question 35 . . My Answer: B and D | Why did I choose this? | I didn’t exactly see the difference between A and B so I knew it was D. I chose B because I thought that if the code segment set MaxPS to 50 at the end it would be right additiona. I also chose D because it uses an if statement to comply to the conditions. It sets maxPS to 30 under &gt; 120 and everything else would be 50. | Why was it wrong? | If it was answer B, it would be set to 50 regardless of the time or conditions that the question had originally asked for in the problem, so it isn’t write. . | Right Answer: A and D | Why? | Answer A sets maxPS to 50 by default, then uses the IF statement to set maxPS to 30 when time &gt; 120. Answer D uses the IF statement to set maxPS to 30 when time &gt; 120 and uses the ELSE statement to set maxPS to 50 otherwise. | . Question 36 . . My Answer: D | Why did I choose this? | I chose this because I thought that if the APPEND command was after the first line it would mean that it was added and used in the code. So I thought it would replace the missing code. | Why was it wrong? | Because the code was initialized at 1, when the code segment I chose would have been initialized at zero for it to produce the right code that the problem wanted. . | Right Answer: C | Why? | “For the first iteration of the loop, twice the value of i, or 2, is appended to evenList, and then i is incremented to 2. For the second iteration of the loop, twice the value of i, or 4, is appended to the list, and then i is incremented to 3. This continues eight more times, appending the next eight even numbers to evenList. This code segment will generate the list [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]” | This was pulled from the college board suggestions but it is basically stating how having the APPEND statement first will give the list result that we wanted instead of the one I chose. So, the code segment would include 2 instead of 22. | . Question 38 . . My Answer: C | Why did I choose this? | To be honest I don’t know why I chose this. I probably assumed it was similar to the previour question so I followed the same format. | Why was it wrong? | In reality, the second word doesn’t change so it wouldn’t be included in the code segment. Therefore it should not include the second or third line and add another as shown in answer B. . | Right Answer: B | Why? | Word1 becomes the temporary variable temp. Th word3 becomes word1. Ten word1, which is stored in temp, becomes word3. The original values of word1 and word3 are interchanged, and it produces the results shown in the table. | .",
            "url": "https://linaawad1.github.io/lina.github.io/blog/2022/11/08/FinalQuizBlog.html",
            "relUrl": "/blog/2022/11/08/FinalQuizBlog.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Night at the Museum",
            "content": "Stop 1: APCSP . Me and Lydia looked at a variety of different CSP projects. The one I really liked the most was the online and called th DN market place: . . This group made a website where you can type an item and the price you are “selling” it for and put it on an online shop. | It was super unique and it was so fun to experience the website as someone just watching. | It also inspired me to incorporate something fun and more interactive as a lesson for the project | . Stop 2: 3D animation . WOW! Me and Lydia spent a good 10 minutes staring at the slideshow of the donuts. No joke. . This is one of them: . . This is Lydia and I’s reactions: . . We thought these donut animations were so interesting and we spent a good amount of time in awe. SO COOL! | We also spent a lot of time looking for the donut with the surfboard because we thought it was super pretty | . Stop 3: Studio Art . SOOOO COOL. We walked around the studio art room admiring all the different art pieces and even the photography that was in the room. . One of my friends showed me hers: . . When I asked her what inspired her she told me about the prompt to capture something personal. she chose the theme of the stages of grief. | It was super cool what she did and everyone elses was so inspiring and pretty. | . Stop 4: Ceramics . Our last strop was ceramics! . I took ceramics last school year and I loved it. My favorite part was admiring what everyone did. This year, so many people’s were so pretty and so creative. I could never. . Here are some good ones: . . . What did I takeway? . I took away the awe and inspirations from these designs. It was so cool and unique to me that it made me want to learn more about how they made these designs possible. I was also now hungry for some donuts. All the art pieces were super cool and unique and I loved exposing myself to new things. It also lowkey made me want to draw something. All the themes for the AP Studio art were super fun and cool. Furthermore, it was just fun to see what other people’s hard work got them and all the cool things people have to show for it. . Yay! Night @ the Museum Blog = Over .",
            "url": "https://linaawad1.github.io/lina.github.io/blog/2022/11/07/Nightatthemuesem.html",
            "relUrl": "/blog/2022/11/07/Nightatthemuesem.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Personalquizblog",
            "content": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.8.9 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “name”: “python”, “version”: “3.8.9” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://linaawad1.github.io/lina.github.io/2022/11/04/PersonalQuizBlog.ipynb",
            "relUrl": "/2022/11/04/PersonalQuizBlog.ipynb",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Title",
            "content": "import random icecream .",
            "url": "https://linaawad1.github.io/lina.github.io/2022/10/18/APIstuff.html",
            "relUrl": "/2022/10/18/APIstuff.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Cb Notess",
            "content": "Errors and Correcting Errors: . Correct Interchanging lines 3 and 7 ensures that if reducing score by penalty results in a negative value, score is set to 0. Otherwise, score is reduced by penalty. | . | Incorrect I put: [-3, -2, -1] | The answer: [-1, 0, 1] | The procedure traverses this list and eventually encounters the positive value 1. At this point, the procedure returns true when it should return false because the list does not contain only positive values. | . | Incorrect I put: 8 and 7 because I linked them together, I assumed they needed to be in the same description | The answer: 8 and 6 because if 6 is inputted it will display check not check minus | . | The Internet: . Correct Messages are broken into packets. Each packet contains data to be transmitted, as well as metadata for routing and reassembling the data upon receipt. This allows the packets to be received in any order and still be reassembled correctly. | . | Correct Protocols are agreed-upon sets of rules that specify the behavior of a system. Protocols used on the Internet enable devices from different manufacturers to communicate in a standard way. | . | Incorrect The internet is not a data stream. Instead, the Internet is an interconnected network of networks, and the World Wide Web is an information system that is accessed via the Internet. | . |",
            "url": "https://linaawad1.github.io/lina.github.io/college%20board/2022/10/16/CB-notess.html",
            "relUrl": "/college%20board/2022/10/16/CB-notess.html",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Programdesignandfunction",
            "content": "Program Purpose and Function . The purpose of our program is to create an enjoyable game that is age and user friendly. It will function as a computer game that is purely for entertainment purposes. Our game will resemble the popular computer game, Snake. . Data Abstraction . A part of our Data complexity will be when the snake goes for its food/target it will need to be added to the snakes length and score. This is us adding data abstraction through a series of code that will make the program function for its purpose. The variable body is the body of the snake and it will represent the number of points the user acheived. . Managing Complexity . The lists will manage complexity by keeping our code organized and minimize the individual variables. it will make adding stuff much easier and simpler. . Procedural Abstraction . Our procedure abstraction will be the effect of the user using the arrow keys to make the snake move in different directions. This procedure will make the program a lot more accesible to users making the function of the design a lot easier to use. . Algorithm Inplementation . An iteration in our code will be continuous gain of points by the user as the snake develops and gets the target repeatedly. The sequencing of the snake will occur when the target is added to the head of the snake and adds on the ends. . Testing . We will test our program by running the game and seeing how user friendly it really is. Also, by asking friends to use it and give feedback. The errors notice will show us what to fix. .",
            "url": "https://linaawad1.github.io/lina.github.io/week%207/2022/10/10/ProgramDesignandFunction.html",
            "relUrl": "/week%207/2022/10/10/ProgramDesignandFunction.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . import requests url = &quot;https://matchilling-chuck-norris-jokes-v1.p.rapidapi.com/jokes/random&quot; headers = { &quot;accept&quot;: &quot;application/json&quot;, &quot;X-RapidAPI-Key&quot;: &quot;d0c0756be5msh778ba988ed7af46p154e34jsnffb080b3a749&quot;, &quot;X-RapidAPI-Host&quot;: &quot;matchilling-chuck-norris-jokes-v1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.text) . {&#34;categories&#34;:[],&#34;created_at&#34;:&#34;2020-01-05 13:42:22.980058&#34;,&#34;icon_url&#34;:&#34;https://assets.chucknorris.host/img/avatar/chuck-norris.png&#34;,&#34;id&#34;:&#34;PmVQUERbTeqYcGSDP6J-Jw&#34;,&#34;updated_at&#34;:&#34;2020-01-05 13:42:22.980058&#34;,&#34;url&#34;:&#34;https://api.chucknorris.io/jokes/PmVQUERbTeqYcGSDP6J-Jw&#34;,&#34;value&#34;:&#34;Chuck Norris can pull your entire skeletal system through any orifice on your body.&#34;} . import requests url = &quot;https://currency-exchange.p.rapidapi.com/listquotes&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;d0c0756be5msh778ba988ed7af46p154e34jsnffb080b3a749&quot;, &quot;X-RapidAPI-Host&quot;: &quot;currency-exchange.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.text) . [&#34;SGD&#34;,&#34;MYR&#34;,&#34;EUR&#34;,&#34;USD&#34;,&#34;AUD&#34;,&#34;JPY&#34;,&#34;CNH&#34;,&#34;HKD&#34;,&#34;CAD&#34;,&#34;INR&#34;,&#34;DKK&#34;,&#34;GBP&#34;,&#34;RUB&#34;,&#34;NZD&#34;,&#34;MXN&#34;,&#34;IDR&#34;,&#34;TWD&#34;,&#34;THB&#34;,&#34;VND&#34;] . import requests url = &quot;https://free-nba.p.rapidapi.com/players&quot; querystring = {&quot;page&quot;:&quot;0&quot;,&quot;per_page&quot;:&quot;25&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;d0c0756be5msh778ba988ed7af46p154e34jsnffb080b3a749&quot;, &quot;X-RapidAPI-Host&quot;: &quot;free-nba.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(&quot;Player Names&quot;) names = response.json().get(&#39;data&#39;) #for name in names: # countries is a list # if name[&quot;name_name&quot;] == &quot;Ike&quot;: # this filters for USA # for key, value in name.items(): # this finds key, value pairs in country # print(key, value) #print(names) print(&quot;NBA Player&quot;) nba = response.json() #for players in nba: # print(players[&quot;id&quot;], &quot;=&quot;, players[&quot;first_name&quot;]) #print(nba) for i in names: print(i[&quot;id&quot;]) . Player Names NBA Player 14 25 47 67 71 90 1 119 149 179 1593 241 392 281 263 382 384 388 430 437 448 494 495 496 497 . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;d0c0756be5msh778ba988ed7af46p154e34jsnffb080b3a749&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . NameError Traceback (most recent call last) /Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb Cell 9 in &lt;cell line: 9&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; try: &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; print(&#34;JSON data is Python type: &#34; + str(type(json))) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; try: &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; # Extracting Coins JSON status, if the API worked NameError: name &#39;json&#39; is not defined During handling of the above exception, another exception occurred: TypeError Traceback (most recent call last) /Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb Cell 9 in &lt;cell line: 9&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=32&#39;&gt;33&lt;/a&gt; print(json) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=33&#39;&gt;34&lt;/a&gt; except: &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/vscode/lina.github.io/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X10sZmlsZQ%3D%3D?line=34&#39;&gt;35&lt;/a&gt; print(&#34;This cell is dependent on running API call in cell above!&#34;) TypeError: &#39;str&#39; object is not callable . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://linaawad1.github.io/lina.github.io/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 101: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 0 . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 3.99 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;please select an item from the menu&quot;) if item == &quot;burger&quot;: print(&quot;price is 3.99&quot;) if item == &quot;fries&quot;: print(&quot;Price is 1.99&quot;) if item == &quot;drink&quot;: print(&quot;Price is 0.99&quot;) . Menu burger $3.99 fries $1.99 drink $0.99 price is 3.99 . store = {&quot;shirt&quot;: 9.99, &quot;pants&quot;: 12.99, &quot;dress&quot;: 15.99} total = 9.99 #shows the user the menu and prompts them to select an item print(&quot;store&quot;) for k,v in store.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;please select an item from the store&quot;) if item == &quot;shirt&quot;: print(&quot;price is 9.99&quot;) if item == &quot;pants&quot;: print(&quot;Price is 12.99&quot;) if item == &quot;dress&quot;: print(&quot;Price is 15.99&quot;) . store shirtt $9.99 pants $12.99 dress $15.99 price is 9.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://linaawad1.github.io/lina.github.io/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "JavaScript",
            "content": "console.log(&quot;My name is Lina!&quot;); . My name is Lina! . var msg = &quot;My name is Lina!&quot;; console.log(msg); . My name is Lina! . function logIt(output) { console.log(output); } logIt(msg); . My name is Lina! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;What&#39;s up yo&quot;); logIt(111) . Reuse of logIT What&#39;s up yo 111 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output) } console.log(&quot;Did you have a good weekend?&quot;) logItType(&quot;Birthday&quot;) // String logItType(&quot;10-28-2006&quot;) // Number logItType([1, 2, 3]); //object . Did you have a good weekend? string ; Birthday string ; 10-28-2006 object ; [ 1, 2, 3 ] . // define a function to hold data for a Person function Person(name, age, classOf) { this.name = name; this.age = age; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable me var me = new Person(&quot;Lina&quot;, &quot;15&quot;, 2024); // object type is easy to work with in JavaScript logItType(me); // before role logItType(me.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;me&quot;); // set the role logItType(me); logItType(me.toJSON()); . object ; Person { name: &#39;Lina&#39;, age: &#39;15&#39;, classOf: 2024, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Lina&#34;,&#34;age&#34;:&#34;15&#34;,&#34;classOf&#34;:2024,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Lina&#39;, age: &#39;15&#39;, classOf: 2024, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Lina&#34;,&#34;age&#34;:&#34;15&#34;,&#34;classOf&#34;:2024,&#34;role&#34;:&#34;&#34;} . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px dashed pink;&quot; + &quot;background-color: black;&quot; + &quot;box-shadow: 0.5em 0.5em 0.5em purple;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameAgeClass OfRole . Lina | 15 | 2024 | me | Lydia | 16 | 2024 | friends | Naja | 15 | 2025 | friends | Dylan | 15 | 2025 | friends | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://linaawad1.github.io/lina.github.io/week%205/2022/09/22/program-purpose-notes.html",
            "relUrl": "/week%205/2022/09/22/program-purpose-notes.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Our Idea",
            "content": "Purpose . Our snake-like computer game will allow the user to play snake with a layout similar to person running. it will be super fun and exciting hopefully! . Do we have final project ideas for a PBL Web Project? . Yes, we are thinking of making a computer game similar to snake with our personalized elements that make everyone included. | . Are we considering a project that is best for our educational purpose? . Not exactly, our purpose is to make a game for the enjoyment of others. | . Is the project going to hold team members interest for 8 weeks? . I think so because we all agreed on the idea and how we want to have fun with it. | . Does the project have potential for someone to use it beyond the 8 weeks? ie Customer or Sponsor needed? . It&#39;s kind of simple so it&#39;s not a revolutionary idea but it will have its specialties. However it won&#39;t need real customer or sponser. | . Does the project have potential to be used for Create Performance Task submission? . If we pull it off and make it kind of unique it probably can be used for Create Performance Task Submission | . Team Roles . DevOp: Lina(me) | Frontened Developer: Dylan | Backened Developer: Naja | Scrum Master: Lydia | .",
            "url": "https://linaawad1.github.io/lina.github.io/week%205/2022/09/22/Teamproject.html",
            "relUrl": "/week%205/2022/09/22/Teamproject.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "JavaScript",
            "content": "console.log(&quot;My name is Lina!&quot;); . My name is Lina! . var msg = &quot;My name is Lina!&quot;; console.log(msg); . My name is Lina! . function logIt(output) { console.log(output); } logIt(msg); . My name is Lina! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;What&#39;s up yo&quot;); logIt(111) . Reuse of logIT What&#39;s up yo 111 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output) } console.log(&quot;Did you have a good weekend?&quot;) logItType(&quot;Birthday&quot;) // String logItType(&quot;10-28-2006&quot;) // Number logItType([1, 2, 3]); //object . Did you have a good weekend? string ; Birthday string ; 10-28-2006 object ; [ 1, 2, 3 ] . // define a function to hold data for a Person function Person(name, age, classOf) { this.name = name; this.age = age; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable me var me = new Person(&quot;Lina&quot;, &quot;15&quot;, 2024); // object type is easy to work with in JavaScript logItType(me); // before role logItType(me.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;me&quot;); // set the role logItType(me); logItType(me.toJSON()); . object ; Person { name: &#39;Lina&#39;, age: &#39;15&#39;, classOf: 2024, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Lina&#34;,&#34;age&#34;:&#34;15&#34;,&#34;classOf&#34;:2024,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Lina&#39;, age: &#39;15&#39;, classOf: 2024, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Lina&#34;,&#34;age&#34;:&#34;15&#34;,&#34;classOf&#34;:2024,&#34;role&#34;:&#34;&#34;} . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px dashed pink;&quot; + &quot;background-color: black;&quot; + &quot;box-shadow: 0.5em 0.5em 0.5em purple;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameAgeClass OfRole . Lina | 15 | 2024 | me | Lydia | 16 | 2024 | friends | Naja | 15 | 2025 | friends | Dylan | 15 | 2025 | friends | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://linaawad1.github.io/lina.github.io/week%205/2022/09/22/Teamproject-copy.html",
            "relUrl": "/week%205/2022/09/22/Teamproject-copy.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "JavaScript",
            "content": "console.log(&quot;My name is Lina!&quot;); . My name is Lina! . var msg = &quot;My name is Lina!&quot;; console.log(msg); . My name is Lina! . function logIt(output) { console.log(output); } logIt(msg); . My name is Lina! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;What&#39;s up yo&quot;); logIt(111) . Reuse of logIT What&#39;s up yo 111 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output) } console.log(&quot;Did you have a good weekend?&quot;) logItType(&quot;Birthday&quot;) // String logItType(&quot;10-28-2006&quot;) // Number logItType([1, 2, 3]); //object . Did you have a good weekend? string ; Birthday string ; 10-28-2006 object ; [ 1, 2, 3 ] . // define a function to hold data for a Person function Person(name, age, classOf) { this.name = name; this.age = age; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable me var me = new Person(&quot;Lina&quot;, &quot;15&quot;, 2024); // object type is easy to work with in JavaScript logItType(me); // before role logItType(me.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;me&quot;); // set the role logItType(me); logItType(me.toJSON()); . object ; Person { name: &#39;Lina&#39;, age: &#39;15&#39;, classOf: 2024, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Lina&#34;,&#34;age&#34;:&#34;15&#34;,&#34;classOf&#34;:2024,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Lina&#39;, age: &#39;15&#39;, classOf: 2024, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Lina&#34;,&#34;age&#34;:&#34;15&#34;,&#34;classOf&#34;:2024,&#34;role&#34;:&#34;&#34;} . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px dashed pink;&quot; + &quot;background-color: black;&quot; + &quot;box-shadow: 0.5em 0.5em 0.5em purple;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameAgeClass OfRole . Lina | 15 | 2024 | me | Lydia | 16 | 2024 | friends | Naja | 15 | 2025 | friends | Dylan | 15 | 2025 | friends | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://linaawad1.github.io/lina.github.io/week%205/2022/09/22/Java-script.html",
            "relUrl": "/week%205/2022/09/22/Java-script.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Jupyter notebook",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# My Fastpages n”, “&gt; Hiii. n”, “ n”, “- toc: true n”, “- badges: true n”, “- comments: true n”, “- categories: [jupyter] n”, “- image: images/chart-preview.png” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# Blog n”, “&gt; By: Lina’s adventures in APCSP n”, “ n”, “- toc: true n”, “- badges: true n”, “- comments: true n”, “- categories: [jupyter] n”, “- image: images/chart-preview.png” ] }, { “cell_type”: “code”, “execution_count”: 1, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Lina’s Jupyter Notebook n” ] } ], “source”: [ “msg = &quot;Lina’s Jupyter Notebook&quot; n”, “print (msg)” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.8.9 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.8.9” }, “varInspector”: { “cols”: { “lenName”: 16, “lenType”: 16, “lenVar”: 40 }, “kernels_config”: { “python”: { “delete_cmd_postfix”: “”, “delete_cmd_prefix”: “del “, “library”: “var_list.py”, “varRefreshCmd”: “print(var_dic_list())” }, “r”: { “delete_cmd_postfix”: “) “, “delete_cmd_prefix”: “rm(“, “library”: “var_list.r”, “varRefreshCmd”: “cat(var_dic_list()) “ } }, “types_to_exclude”: [ “module”, “function”, “builtin_function_or_method”, “instance”, “_Feature” ], “window_display”: false }, “vscode”: { “interpreter”: { “hash”: “31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6” } } }, “nbformat”: 4, “nbformat_minor”: 4 } .",
            "url": "https://linaawad1.github.io/lina.github.io/2022/09/20/Jupyter-notebook.ipynb",
            "relUrl": "/2022/09/20/Jupyter-notebook.ipynb",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Focusandhabits",
            "content": "Video Notes . Students are too stressed to do things they enjoy | Studnets feel lonely | Over 40% of students experience above the average level of stress | 1/3 of students feel too deppressed to function | Over 40% of students feel hopeless | 60% of students feel overwhelming anxiety | Over 50% of students feel very, very lonely | Over 80% feel overwhelmed with all that they have to do | Knowledge without application means nothing | Our behaviors a ffect our happiness | Cognitive Bias = GI Joe Fallacy | Happier people spend more times with others | . Important Studies and Sciences . The Study of Happy People | The Study of behavioral change | Science of Psychology | . Top 10 Insights from The Science of Psychology and the Good Life . You do not have to be stuck in a state of well-being, you can always improve it | Things like where we live, what job we have, our salary, etc. do not matter as much as we think | Taking control of your life may not bring you to happiness, but following the habits of happy people can improve your well-being | Recognizing that your mind is a liar and your intuition cannot be trusted when it comes to what happiness is |",
            "url": "https://linaawad1.github.io/lina.github.io/week%204/2022/09/20/FocusandHabits.html",
            "relUrl": "/week%204/2022/09/20/FocusandHabits.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Quizoutline",
            "content": "My Quiz Outline . Ideas for Quiz: . Make a cell phone layout to hold our quiz | Our lockscreen is a photo of Chris and Matt Sturniolo using the upload image feature and an open button We also included details like the time and date | . | Our homescreen included a pretty picture of a sunset from the internet | From there we created a button that we designed to look like an app on a phone | Our first app was our quiz with 3 questions about the Sturniolo Triplets, Lydia’s favorite drink, and my favorite ice cream flavor. | Then, when the user goes back to the homescreen they can clcik on the istagram app. | In the instagram app, it shows a picture of Lydia and I and a button called “load more” | If you click this button it takes you to Lydia’s picture. If it’s clicked it takes you to my pictures then to home. | The last app is a messaging app that shows a fake conversation between me and Lydia. | The last feature is a radio button that can take the user back to the lockscreen 11.That’s our quiz!!!! | Lydia and I’s App Lab Project . https://studio.code.org/projects/applab/7FyBTOeW5LTCta2Q1Z3ZlLsFXuzzRota5b7uXiTt1_I .",
            "url": "https://linaawad1.github.io/lina.github.io/2022/09/09/QuizOutline.html",
            "relUrl": "/2022/09/09/QuizOutline.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Outline",
            "content": "My ideas for Performance Task . Ideas for an app: . Games classic games but prettier | for example: Soduko but with something other than numbers and with personalized designs | . With colors: try to fill the boxes with each color. | The colors could include the rainbow, gray, and white | . | Apps: An app that will talk to you about advice and certain quotes that are customizable. | . for example, saying a name or a place in one of the pieces of advice can help the user feel more connected and helped by the app. | . |",
            "url": "https://linaawad1.github.io/lina.github.io/3/2022/09/09/Outline.html",
            "relUrl": "/3/2022/09/09/Outline.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Agilemethodology",
            "content": "Scrum Process . . Notes on Agile Methodology . Scrum Master: facilitate the sprint, looking to improve group efficiency | DevOps: philosophies and tools to increase velocity and the efficiency of our project | Frontened Developer: the visual parts of the project the user interacts with | Backened Developer: The background code nobody sees but is very important. Data storage, security, and other server-side functions. | . Scrum Board: develop and understand everyone’s ideas on a continuous basis . Sprint: 2 weeks of planning and executing work . 7 Important Transferable Skills: . -CREATIVITY: Creativity in education and workplace, in many cases, presents itself in terms of how you approach tasks and solve problems, Do you do both inside and outside of the box for solutions? Or, do you stick to a planned system? If you solve even the smallest problem, you’ve demonstrated creativity. This skill scales up: Big problems are enlarged small problems; small problems scaled up are big problems. . CRITICAL THINKING: Solving complex or abstract problems requires critical thinking, especially when the problems are critical. Not only that, but critical thinking skills also enable the discovery of deficiencies that could cause less than optimal results. . | COMMUNICATION: If you can’t communicate well, your other skills are meaningless. Students are encouraged to talk about how they were able to bring their teams together. . | COLLABORATION THROUGH LEADERSHIP: Leadership skills generally encompass communication, problem-solving and managing conflict, relationship building and being able to get people on your team on board with a mission or project. Leaders are big-picture thinkers who take various interests into account when making major decisions . | COLLABORATION-TEAMWORK: Individuals that work well with others. It applies to High School, College and adults. Trust is the major difference between working alone versus working in groups. And trust can be hard: Some people are skeptical by nature or want to work through an entire project lifecycle solo. But placing trust in an active, dynamic team provides more than just project completion. Teamwork — a sense of community — elevates spirits and improves productivity. . | RESEARCH: Research is not a process performed by Teacher, Boss, or some upstream process. Everything you do in Technology requires research. Research is a key part of the lifecycle: changing plans, fluctuating results, and roadblocks require research before anyone can take action. Conversing with team members is a form of research. . | TECHNICAL: Need to understand the tech your project requires. Try to stay current with the many technical advancements on your project. Make sure that play with the different softwares and platforms that are part of your environment. Be knowledgeable about technical things that you are learning. . | .",
            "url": "https://linaawad1.github.io/lina.github.io/2022/09/06/agilemethodology.html",
            "relUrl": "/2022/09/06/agilemethodology.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Themechange",
            "content": "Theme Change] . .",
            "url": "https://linaawad1.github.io/lina.github.io/2022/09/06/Themechange.html",
            "relUrl": "/2022/09/06/Themechange.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "# variable of type string print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 18 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name John Doe &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 18 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] Bash &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;John Doe&#39;, &#39;age&#39;: 18, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] John Doe &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being built on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will be able collect many instances of that pattern. . List is used to collect many instances of a pattern | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration this example will explore constructing a List of people and cars. . As we learned above, a List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list. A class usually has extra method to support working with its objects/instances. | In the example below, the expression is appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries, or a collection of many similar data patterns. The output looks similar to JavaScript Object Notation (JSON), Jekyll/GitHub pages yml files, FastPages Front Matter. As discussed we will see this key/value patter often, you will be required to understand this data structure and understand the parts. Just believe it is peasy ;) and it will become so. | . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Lina&quot;, &quot;LastName&quot;: &quot;Awad&quot;, &quot;DOB&quot;: &quot;October 28&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;lina.eid28@gmail.com&quot;, &quot;Own_Cars&quot;: [&quot;Honda&quot;, &quot;Infinity&quot;, &quot;Tesla&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}, {&#39;FirstName&#39;: &#39;Lina&#39;, &#39;LastName&#39;: &#39;Awad&#39;, &#39;DOB&#39;: &#39;October 28&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;lina.eid28@gmail.com&#39;, &#39;Own_Cars&#39;: [&#39;Honda&#39;, &#39;Infinity&#39;, &#39;Tesla&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet, to applications, or preparing it to be stored into a database. It is a great way to exchange data between programs and programmers. Exchange of data between programs includes the data type the method/function and the format of the data type. These concepts are key to learning how to write functions, receive, and return data. This process is often referred to as an Application Programming Interface (API). . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Lina Awad Residence: San Diego Birth Day: October 28 Cars: . KeyError Traceback (most recent call last) /Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 7 in &lt;cell line: 18&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=14&#39;&gt;15&lt;/a&gt; for record in InfoDb: &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; print_data(record) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=17&#39;&gt;18&lt;/a&gt; for_loop() /Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 7 in for_loop() &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=13&#39;&gt;14&lt;/a&gt; print(&#34;For loop output n&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=14&#39;&gt;15&lt;/a&gt; for record in InfoDb: &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; print_data(record) /Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 7 in print_data(d_rec) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print(&#34; t&#34;, &#34;Birth Day:&#34;, d_rec[&#34;DOB&#34;]) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; print(&#34; t&#34;, &#34;Cars: &#34;, end=&#34;&#34;) # end=&#34;&#34; make sure no return occurs -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; print(&#34;, &#34;.join(d_rec[&#34;Owns_Cars&#34;])) # join allows printing a string list with separator &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; print() KeyError: &#39;Owns_Cars&#39; . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . # while loop algorithm contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . # recursion algorithm loops incrementing on each call (n + 1) until exit condition is met def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output . NameError Traceback (most recent call last) /Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 11 in &lt;cell line: 12&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; return &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; print(&#34;Recursive loop output n&#34;) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; recursive_loop(0) /Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 11 in recursive_loop(i) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; if i &lt; len(InfoDb): &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; record = InfoDb[i] -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print_data(record) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; recursive_loop(i + 1) &lt;a href=&#39;vscode-notebook-cell:/Users/linaalsheikh-eid/APCSP/_notebooks/2022-08-29-TP120-python_lists.ipynb#X13sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; return NameError: name &#39;print_data&#39; is not defined . FirstName = input(&quot;What is your first name?&quot;) Age= input(&quot;How old are you?&quot;) FavoriteDrink= input(&quot;What is your favorite drink?&quot;) BestSeason= input(&quot;What is the best season of the year?&quot;) .",
            "url": "https://linaawad1.github.io/lina.github.io/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "My Fastpages",
            "content": "Blog . By:Lina&#39;s adventures in APCSP . toc: true | badges: true | comments: true | categories: [jupyter] | image: images/chart-preview.png | . msg = &quot;Lina&#39;s Jupyter Notebook&quot; print (msg) . Lina&#39;s Jupyter Notebook .",
            "url": "https://linaawad1.github.io/lina.github.io/jupyter/2022/08/28/Jupyter-notebook.html",
            "relUrl": "/jupyter/2022/08/28/Jupyter-notebook.html",
            "date": " • Aug 28, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Lina [^1] is a new computer science student at del norte hoping to learn cool skills. . Hey! What’s up? “The sky,” said Lydia. I am Lina .",
          "url": "https://linaawad1.github.io/lina.github.io/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Notes",
          "content": "Lessons . Try to use your brain . Lists and Dictionary . Str- String Ex: print(“What is the variable name/key?”, “value?”, “type?”, “primitive or collection, why?”) name = “John Doe” print(“name”, name, type(name)) . print() . Int- Float Ex: print(“What is the variable name/key?”, “value?”, “type?”, “primitive or collection, why?”) score = 90.0 print(“score”, score, type(score)) . print() Note: zero after decimal is important lol .",
          "url": "https://linaawad1.github.io/lina.github.io/note/",
          "relUrl": "/note/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page7": {
          "title": "To Do",
          "content": "Week Calc BC APEL AP Bio AP CSP Personal . 3 | Unit 2 HW 6 | Annotate poem, Read book | Study for quiz, SLO&#39;s | Review Ticket | Drink Water | .",
          "url": "https://linaawad1.github.io/lina.github.io/toc/",
          "relUrl": "/toc/",
          "date": ""
      }
      
  

  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://linaawad1.github.io/lina.github.io/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}